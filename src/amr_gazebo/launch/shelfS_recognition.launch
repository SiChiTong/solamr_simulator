<?xml version="1.0"?>

<launch>
  <env name="GAZEBO_RESOURCE_PATH" value="$(find amr_gazebo)/media/materials"/>

  <arg name="use_rviz" default="true" /> 
  <arg name="use_joy" default="true" /> 
  <arg name="use_lidar_detector" default="false" /> 
  <arg name="use_find_object" default="false" /> 
  <arg name="gazebo_gui" default="true" /> 

<!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="$(arg gazebo_gui)"/>
    <arg name="recording" value="false"/>
    <arg name="debug" value="false"/>
    <arg name="verbose" value="true"/>
  </include>

<!-- Spawn robots into Gazebo -->

    <!-- Spawn a single_shelf in Gazebo -->
    <group ns="shelf_S">
        <arg name="robot_name" value="shelf_S"/>
        <param name="tf_prefix" value="$(arg robot_name)" />  
        <!-- interpret xacro into urdf-->
        <param name="robot_description" command="$(find xacro)/xacro --inorder $(find amr_description)/urdf/single_shelf.urdf.xacro robotName:=$(arg robot_name)" />
        <!-- spawn model from parameter server : robot_description -->
        <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf_$(arg robot_name)" args="-urdf -model $(arg robot_name) -x 2 -y 1 -z 0 -param robot_description" />
    </group>


    <!-- Spawn solamr_1 in Gazebo -->
    <group ns="solamr_1">
        <arg name="robot_name" value="solamr_1"/>
        <param name="tf_prefix" value="$(arg robot_name)" />  
        <!-- interpret xacro into urdf-->
        <param name="robot_description" command="$(find xacro)/xacro --inorder $(find amr_description)/urdf/solamr.urdf.xacro robotName:=$(arg robot_name)" />
        <!-- spawn model from parameter server : robot_description -->
        <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf_$(arg robot_name)" args="-urdf -model $(arg robot_name) -x 0 -y 0 -z 0 -param robot_description" />
        <!-- control file: controller spawner, robot_state_publisher -->
        <include file="$(find amr_control)/launch/amr_control.launch">
            <arg name="robot_ns" value="$(arg robot_name)" />
        </include>
    </group>

<?ignore
?>


<!-- joy teleop -->
    <!--
    <arg name="single" default="true"/>
    -->

    <arg name="joy_maxVel" value="1." />
    <arg name="joy_accele" value=".01"/>

    <!-- solamr_1 -->
    <node pkg="amr_gazebo" type="teleop_joy.py" name="solamr_1_teleop" output="screen" if="$(arg use_joy)">
        <param name="robot_ns" value="solamr_1" />
        <param name="max_velocity" value="$(arg joy_maxVel)" />
        <param name="acceleration" value="$(arg joy_accele)" />
    </node>

    <node pkg="joy" type="joy_node" name="solamr_1_joy_node" if="$(arg use_joy)">
        <param name="dev" type="string" value="/dev/input/js0" />
        <remap from="/joy" to="/solamr_1/joy" />
	    <param name="deadzone" value="0.0" />
	    <param name="autorepeat_rate" value="130" />
    </node>

<!-- keyboard teleop -->
    <node pkg="amr_gazebo" type="teleop_key.py" name="solamr_1_teleop" unless="$(arg use_joy)">
        <param name="robot_ns" value="solamr_1" />
    </node>


<!-- Object Recognition 
    <arg name="gui" default="true"/>
    <arg name="image_topic" default="/solamr_1/camera/rgb/image_raw"/>
    <arg name="session_path" default="$(find amr_gazebo)/config/od_2d_bCart_session.bin"/>
    <arg name="settings_path" default="~/.ros/find_object_2d.ini"/>

    <node name="find_object_2d" pkg="find_object_2d" type="find_object_2d" output="screen">
        <remap from="image" to="$(arg image_topic)"/>
        <param name="gui" value="$(arg gui)" type="bool"/>
        <param name="session_path" value="$(arg session_path)" type="str"/>
        <param name="settings_path" value="$(arg settings_path)" type="str"/>
    </node>
-->

<!-- 3D Object Recognition with pose -->
    <arg name="gui" default="true"/>
    <arg name="object_prefix" default="object"/>
    <arg name="image_topic" default="/solamr_1/camera/rgb/image_raw"/>
    <arg name="session_path" default="$(find amr_gazebo)/config/od_2d_bCart_session.bin"/>
    <arg name="settings_path" default="~/.ros/find_object_2d.ini"/>

    <node name="find_object_2d" pkg="find_object_2d" type="find_object_2d" output="screen" if="$(arg use_find_object)">
        <remap from="image" to="$(arg image_topic)"/>
        <param name="gui" value="$(arg gui)" type="bool"/>
        <param name="subscribe_depth" value="true" type="bool"/>
        <param name="session_path" value="$(arg session_path)" type="str"/>
        <param name="settings_path" value="$(arg settings_path)" type="str"/>
        <param name="object_prefix" value="$(arg object_prefix)" type="str"/>
        <param name="approx_sync" value="false" type="bool"/>

        <remap from="rgb/image_rect_color" to="/solamr_1/camera/rgb/image_raw"/>
        <remap from="depth_registered/image_raw" to="/solamr_1/camera/depth/image_raw"/>
        <remap from="depth_registered/camera_info" to="/solamr_1/camera/depth/camera_info"/>
    </node>


<!-- Aruco detection -->
  <!-- namespace for camera input -->
  <arg name="camera" default="/solamr_1/camera/rgb"/>
  <arg name="image" default="image_raw"/>
  <arg name="transport" default="compressed"/>
  <arg name="fiducial_len" default="0.25"/>
  <arg name="dictionary" default="10"/>
  <arg name="do_pose_estimation" default="true"/>
  <arg name="ignore_fiducials" default="" />
  <arg name="fiducial_len_override" default="" />

  <node pkg="aruco_detect" name="aruco_detect"
    type="aruco_detect" output="screen" respawn="false">
    <param name="image_transport" value="$(arg transport)"/>
    <param name="publish_images" value="true" />
    <param name="fiducial_len" value="$(arg fiducial_len)"/>
    <param name="dictionary" value="$(arg dictionary)"/>
    <param name="do_pose_estimation" value="$(arg do_pose_estimation)"/>
    <param name="ignore_fiducials" value="$(arg ignore_fiducials)"/>
    <param name="fiducial_len_override" value="$(arg fiducial_len_override)"/>
    <remap from="/camera/compressed" 
        to="$(arg camera)/$(arg image)/$(arg transport)"/>
    <remap from="/camera_info" to="$(arg camera)/camera_info"/>
  </node>


<!-- rviz -->
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find amr_gazebo)/rviz/single_solamr.rviz" if="$(arg use_rviz)" />

</launch>
